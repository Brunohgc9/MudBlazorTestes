@page "/counter"
@rendermode InteractiveServer
@using System.Threading
@using MudBlazor

<MudGrid>
    <MudItem>
        <MudAutocomplete T="string"
                         Label="Pizzas"
                         Value="userText"
                         ValueChanged="OnPizzaSelected"
                         SearchFunc="SearchInBox"
                         Immediate="true"
                         Clearable="true" />

        <MudChipSet T="string" AllClosable OnClose="OnChipClosed">
            @foreach (var value in PizzaNames)
            {
                <MudChip Text="@value"></MudChip>
            }
        </MudChipSet>
    </MudItem>
</MudGrid>

@code
{
    public record Pizza(string Cliente, string Sabor, decimal Valor, decimal TaxaDeEntrega);
    public List<Pizza> Pizzas = new();
    public string userText = string.Empty;
    public List<string> PizzaNames = new();

    protected override Task OnInitializedAsync()
    {
        Pizzas = new List<Pizza>
        {
            new Pizza("Antônio", "Frango com Catupiry", 25.5m, 3.7m),
            new Pizza("Priscila", "Á Moda", 40.7m, 1m),
            new Pizza("Marcos", "Milho e Bacon", 20m, 8m),
            new Pizza("Angélica", "Portuguesa", 30m, 2.7m),
            new Pizza("Mônica", "Lombo Canadense", 55.99m, 15m)
        };
        return base.OnInitializedAsync();
    }

    private async Task<IEnumerable<string>> SearchInBox(string value, CancellationToken token)
    {
        var availablePizzas = Pizzas
            .Select(x => x.Sabor)
            .Except(PizzaNames)
            .ToList();

        if (string.IsNullOrWhiteSpace(value))
            return availablePizzas;

        return availablePizzas
            .Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

    private void OnPizzaSelected(string selectedValue)
    {
        if (!string.IsNullOrEmpty(selectedValue) && !PizzaNames.Contains(selectedValue))
        {
            PizzaNames.Add(selectedValue);
            StateHasChanged();
        }
    }

    private void OnChipClosed(MudChip<string> chip)
    {
        PizzaNames.Remove(chip.Text);
        StateHasChanged();
    }
}
